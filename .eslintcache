[{"C:\\Users\\AG23\\pumba-ui\\src\\index.js":"1","C:\\Users\\AG23\\pumba-ui\\src\\App.js":"2","C:\\Users\\AG23\\pumba-ui\\src\\serviceWorker.js":"3","C:\\Users\\AG23\\pumba-ui\\src\\theme\\index.js":"4","C:\\Users\\AG23\\pumba-ui\\src\\store\\index.js":"5","C:\\Users\\AG23\\pumba-ui\\src\\containers\\Layout\\Layout.js":"6","C:\\Users\\AG23\\pumba-ui\\src\\theme\\typography.js":"7","C:\\Users\\AG23\\pumba-ui\\src\\containers\\index.js":"8","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\index.js":"9","C:\\Users\\AG23\\pumba-ui\\src\\containers\\TheContent.js":"10","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\servicesFetchingReducers.js":"11","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\hashedPackagesReducer.js":"12","C:\\Users\\AG23\\pumba-ui\\src\\routes.js":"13","C:\\Users\\AG23\\pumba-ui\\src\\views\\home.js":"14","C:\\Users\\AG23\\pumba-ui\\src\\components\\DuplactionCheck\\fileUpload.js":"15","C:\\Users\\AG23\\pumba-ui\\src\\components\\Uploader\\repositorySelection.js":"16","C:\\Users\\AG23\\pumba-ui\\src\\components\\Uploader\\technologiesSelection.js":"17","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\servicesFetchingActions.js":"18","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\hashedPackagesActions.js":"19","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\uploadedPackagesReducer.js":"20","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\uploadedPackagesAction.js":"21","C:\\Users\\AG23\\pumba-ui\\src\\components\\Stepper\\stepper.js":"22","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\repositorySelectionReducer.js":"23","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\technologySelectedReducer.js":"24","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\techlonogySelectionActions.js":"25","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\repositorySelectionActions.js":"26","C:\\Users\\AG23\\pumba-ui\\src\\components\\Results\\results.js":"27","C:\\Users\\AG23\\pumba-ui\\src\\components\\Results\\resultsError.js":"28"},{"size":1459,"mtime":1623072378210,"results":"29","hashOfConfig":"30"},{"size":964,"mtime":1623072378178,"results":"31","hashOfConfig":"30"},{"size":5227,"mtime":1623072378210,"results":"32","hashOfConfig":"30"},{"size":1699,"mtime":1623072378218,"results":"33","hashOfConfig":"30"},{"size":820,"mtime":1624280425397,"results":"34","hashOfConfig":"30"},{"size":506,"mtime":1623072378202,"results":"35","hashOfConfig":"30"},{"size":921,"mtime":1623072378218,"results":"36","hashOfConfig":"30"},{"size":68,"mtime":1623072378202,"results":"37","hashOfConfig":"30"},{"size":937,"mtime":1624435069705,"results":"38","hashOfConfig":"30"},{"size":1137,"mtime":1623072378202,"results":"39","hashOfConfig":"30"},{"size":1581,"mtime":1624435060276,"results":"40","hashOfConfig":"30"},{"size":225,"mtime":1624281759823,"results":"41","hashOfConfig":"30"},{"size":191,"mtime":1623072378210,"results":"42","hashOfConfig":"30"},{"size":4323,"mtime":1624455827602,"results":"43","hashOfConfig":"30"},{"size":3897,"mtime":1624366686744,"results":"44","hashOfConfig":"30"},{"size":2188,"mtime":1624373592203,"results":"45","hashOfConfig":"30"},{"size":2039,"mtime":1624373467299,"results":"46","hashOfConfig":"30"},{"size":4360,"mtime":1624452904458,"results":"47","hashOfConfig":"30"},{"size":379,"mtime":1624285515141,"results":"48","hashOfConfig":"30"},{"size":231,"mtime":1624276374251,"results":"49","hashOfConfig":"30"},{"size":393,"mtime":1624285459788,"results":"50","hashOfConfig":"30"},{"size":2799,"mtime":1624435824645,"results":"51","hashOfConfig":"30"},{"size":228,"mtime":1624371352249,"results":"52","hashOfConfig":"30"},{"size":230,"mtime":1624371298176,"results":"53","hashOfConfig":"30"},{"size":269,"mtime":1624371271505,"results":"54","hashOfConfig":"30"},{"size":269,"mtime":1624371346153,"results":"55","hashOfConfig":"30"},{"size":715,"mtime":1624453596022,"results":"56","hashOfConfig":"30"},{"size":777,"mtime":1624453718771,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1h7e15p",{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\AG23\\pumba-ui\\src\\index.js",["126","127","128","129","130"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';  \r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\"; \r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Provider } from 'react-redux'\r\nimport MuiTheme from './theme';\r\nimport { render } from 'react-dom'\r\nimport configureStore from './store'\r\nimport { ConnectedRouter } from \"react-router-redux\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\nconst initialState = window.initialReduxState;\r\n\r\nconst store = configureStore(history, initialState);\r\n\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <MuiThemeProvider theme={MuiTheme}>\r\n        <Provider store={store}>\r\n          <App />    \r\n        </Provider>   \r\n        <CssBaseline />\r\n      </MuiThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["131","132"],"C:\\Users\\AG23\\pumba-ui\\src\\App.js",["133","134","135"],"import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch, Router  } from 'react-router';\r\nimport 'react-fontawesome'\r\nimport { createBrowserHistory } from \"history\";\r\n\r\n// import '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\n// Containers\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\n\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\nconst TheLayout = React.lazy(() => import('./containers/Layout/Layout'));\r\nconst loading = (\r\n  <div >\r\n    <div >blaaa</div>\r\n  </div>\r\n)\r\nconst App = (props) => {\r\n\r\n \r\n  \r\n  return (\r\n        <Router history={history}> \r\n            <React.Suspense fallback={loading}>\r\n              {/* <Switch>               */}\r\n                  <Route path=\"/\" name=\"Home\" render={props => <TheLayout {...props}/>} /> \r\n        \r\n              {/* </Switch> */}\r\n            </React.Suspense>\r\n         </Router>\r\n        \r\n    );\r\n  }\r\n\r\nexport default (App);\r\n","C:\\Users\\AG23\\pumba-ui\\src\\serviceWorker.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\theme\\index.js",["136"],"import { createMuiTheme } from '@material-ui/core';\r\nimport typography from './typography';\r\nimport { red, green, yellow, grey, orange } from '@material-ui/core/colors'\r\n\r\n/* eslint-disable import/no-unresolved, import/no-webpack-loader-syntax */\r\nimport vars from '!!sass-vars-to-js-loader!../assests/core/_variables-mui.scss';\r\n\r\nconst MuiTheme = createMuiTheme({\r\n  error: {\r\n    main: orange[500]\r\n  },\r\n  success: {\r\n    main: green[500]\r\n  },\r\n  warning: {\r\n     main: yellow[500]\r\n  },\r\n  restricted: {\r\n    main: grey[400]\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: vars.primary\r\n    },\r\n    grey: {\r\n      300: vars.inheritDefault1,\r\n      A100: vars.inheritDefault2\r\n    },\r\n    secondary: {\r\n      main: vars.secondary\r\n    },\r\n    \r\n    warning: {\r\n      color: vars.yellow,\r\n      backgroundColor: vars.yellow,\r\n      main: vars.yellow\r\n    },\r\n    helpers: {\r\n      primary: vars.blue,\r\n      main: 'rgba(25, 46, 91, .035)'\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.1\r\n  },\r\n  shape: {\r\n    borderRadius: '0.5rem'\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      text: {\r\n        paddingLeft: '14px',\r\n        paddingRight: '14px'\r\n      },\r\n      containedSizeSmall: {\r\n        paddingLeft: '14px',\r\n        paddingRight: '14px'\r\n      },\r\n      root: {\r\n        textTransform: 'none',\r\n        fontWeight: 'normal'\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        padding: '1vh'\r\n      }\r\n    }, \r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: vars.second,\r\n        padding: '8px 16px',\r\n        fontSize: '13px'\r\n      },\r\n      arrow: {\r\n        color: vars.second\r\n      }\r\n    }\r\n  },\r\n  typography\r\n});\r\n\r\nexport default MuiTheme;\r\n","C:\\Users\\AG23\\pumba-ui\\src\\store\\index.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\containers\\Layout\\Layout.js",["137","138","139","140"],"import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { TheContent } from '../index'\r\n\r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\"\r\n    },   \r\n  }));\r\n   \r\n\r\nconst TheLayout = () => {  \r\n  const classes = useStyles();  \r\n  \r\n  return (    \r\n      <div className=\"c-wrapper\">\r\n        <TheContent/> \r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n","C:\\Users\\AG23\\pumba-ui\\src\\theme\\typography.js",["141"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    fontSize: '16px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    fontWeight: 400,\r\n    fontSize: '14px'\r\n  },\r\n  body1: {\r\n    fontSize: '14px'\r\n  },\r\n  body2: {\r\n    fontSize: '14px'\r\n  },\r\n  button: {\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    fontSize: '12px'\r\n  },\r\n  overline: {\r\n    fontSize: '12px',\r\n    fontWeight: 500,\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","C:\\Users\\AG23\\pumba-ui\\src\\containers\\index.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\index.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\containers\\TheContent.js",["142","143"],"import React, { Suspense, useEffect } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\n// routes config\r\nimport routes from '../routes'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst TheContent = () => {\r\n\r\n  return (\r\n    <main className=\"c-main\">\r\n      <Grid container direction=\"row\" justify=\"center\" style={{ minHeight: '101vh', maxWidth: '100%' }}>                     \r\n        \r\n          <Grid id=\"content-grid\" xs={12} container direction=\"row\" align=\"center\">     \r\n          <Suspense>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <route.component {...props} />\r\n                  )} />\r\n              )\r\n            })}\r\n            {/* <Redirect from=\"/\" to=\"/dashboard\" /> */}\r\n          </Switch>\r\n        </Suspense>\r\n        </Grid>         \r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheContent)\r\n","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\servicesFetchingReducers.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\hashedPackagesReducer.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\routes.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\views\\home.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\components\\DuplactionCheck\\fileUpload.js",["144","145","146","147","148","149"],"import Button from '@material-ui/core/Button';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport CryptoJS from 'crypto-js';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setHashedPackages } from '../../store/actions/hashedPackagesActions';\r\nimport { fetchDependencyCheck, fetchDuplicationCheck, fetchUploadToStorage } from '../../store/actions/servicesFetchingActions';\r\nimport { setUploadedPackages } from '../../store/actions/uploadedPackagesAction';\r\n\r\n\r\nconst useStyles = makeStyles(theme => createStyles({\r\n  previewChip: {\r\n    minWidth: 0,\r\n    maxWidth: 0\r\n  },\r\n}));\r\n\r\nconst FileUpload = (props) => {\r\n  //  const [files, setFiles] = React.useState([])\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [files, setFiles] = React.useState([])\r\n  const [proccessedPackages, setProccessedPackages] = React.useState([])\r\n\r\n  const handleOpen = () => {\r\n    setOpen(open => true)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(open => false)\r\n  };\r\n\r\n  let packages = []\r\n\r\n  const  handleSave = (files, event) => {  \r\n   \r\n    props.fetchDuplicationCheck(props.hashedPackages)\r\n  };  \r\n\r\n\r\n  const handleDrop = (files, event) => {  \r\n    files.forEach(function (item) {\r\n      var reader = new FileReader();\r\n      reader.onload = e =>  {\r\n        var file_result = e.result; // this == reader, get the loaded file \"result\"\r\n        var file_wordArr = CryptoJS.lib.WordArray.create(file_result); //convert blob to WordArray , see https://code.google.com/p/crypto-js/issues/detail?id=67\r\n        var sha1_hash = CryptoJS.SHA1(file_wordArr); //calculate SHA1 hash\r\n        var finalSha = sha1_hash.toString()\r\n        var newPackagesArr = proccessedPackages\r\n        let newPackage = {\"packageName\": item.name, \"sha1\": finalSha}\r\n        newPackagesArr.push({\"packageName\": item.name, \"sha1\": finalSha})\r\n        setProccessedPackages(newPackagesArr)\r\n        props.setHashedPackages(newPackage, props.hashedPackages)\r\n        setOpen(open => false)\r\n      };\r\n      reader.readAsArrayBuffer(item);\r\n      props.setUploadedPackages(item, props.uploadedPackages)\r\n    })\r\n\r\n  }\r\n\r\n  const testApi = () => {\r\n    var date = new Date()\r\n    var sid = date.getMilliseconds().toString()\r\n    sid.concat(date.getMilliseconds().toString())\r\n    props.fetchDuplicationCheck(props.hashedPackages, sid)   \r\n    props.fetchUploadToStorage(props.uploadedPackages[0], sid)\r\n    props.fetchDependencyCheck(sid)\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      <Button onClick={testApi}>check</Button>\r\n\r\n      <DropzoneArea\r\n        open={open}\r\n        onDrop={handleDrop}\r\n        showPreviews={false}\r\n        maxFileSize={5000000}\r\n        onClose={handleClose}\r\n        cancelButtonText={\"Cancel\"}\r\n        submitButtonText={\"Submit\"}\r\n        showFileNamesInPreview={true}\r\n        dialogTitle={\"Duplicate checker\"}\r\n        dropzoneText={\"Upload your packages\"}\r\n      />      \r\n\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      hashedPackages: state.hashedPackages,      \r\n      uploadedPackages: state.uploadedPackages,\r\n      \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUploadedPackages: (newPackage, packagesArray) => dispatch(setUploadedPackages(newPackage, packagesArray)),\r\n    setHashedPackages: (newPackage, packagesArray) => dispatch(setHashedPackages(newPackage, packagesArray)),\r\n    fetchDuplicationCheck: (uploadedPackages, sid) => dispatch(fetchDuplicationCheck(uploadedPackages, sid)),\r\n    fetchDependencyCheck: (sid) => dispatch(fetchDependencyCheck(sid)),\r\n    fetchUploadToStorage: (uploadedPackages, sid) => dispatch(fetchUploadToStorage(uploadedPackages, sid)),    \r\n  };\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (FileUpload)","C:\\Users\\AG23\\pumba-ui\\src\\components\\Uploader\\repositorySelection.js",["150","151"],"C:\\Users\\AG23\\pumba-ui\\src\\components\\Uploader\\technologiesSelection.js",["152","153"],"import Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport mavenImg from '../../images/maven.png';\r\nimport npmImg from '../../images/npm.png';\r\nimport pypiImg from '../../images/pypi.png';\r\nimport rpmImg from '../../images/rpm.png';\r\nimport { setTechlonogySelection } from '../../store/actions/techlonogySelectionActions'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst images = [\r\n  {\r\n    source: pypiImg,\r\n    title: 'pypi',\r\n  },\r\n  {\r\n    source: mavenImg,\r\n    title: 'maven',\r\n  },\r\n  {\r\n    source: rpmImg,\r\n    title: 'rpm',\r\n  },\r\n  {\r\n    source: npmImg,\r\n    title: 'npm',\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: \"#4287f5\"\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 60,\r\n    width: 60,\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst TechnologiesSelection = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const updateStore = (techlonogy) => {\r\n    props.setTechlonogySelection(techlonogy)\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n        {images.map((image) => (\r\n            <Button variant=\"contained\" color={props.technologySelected == image.title ? \"primary\" : \"\"} onClick={ () => updateStore(image.title)}>\r\n                <img src={image.source} key={image.title} className={classes.image}/>\r\n            </Button>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    technologySelected: state.technologySelected\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {        \r\n    setTechlonogySelection: (techlonogy) => dispatch(setTechlonogySelection(techlonogy)),\r\n\r\n  };\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (TechnologiesSelection)\r\n","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\servicesFetchingActions.js",["154","155"],"// some api call has failed, not only services\r\nexport function itemsHasErrored(bool) {\r\n  return {\r\n      type: 'ITEMS_HAS_ERRORED',\r\n      hasErrored: bool\r\n  };\r\n}\r\n\r\n// some api call is loading\r\nexport function increaseItemsThatLoading() {\r\n  return {\r\n      type: 'ITEM_LOADING',\r\n  };\r\n}\r\n\r\n// decrease the amount of api calles than running\r\nexport function decreaseItemsThatLoading() {\r\n  return {\r\n      type: 'ITEM_STOPPED_LOADING',\r\n  };\r\n}\r\n\r\n// the uploading process has failed\r\nexport function setErrorResults(service, results) {\r\n  return {\r\n    type: 'SET_PROCESS_RESULTS',\r\n    items: {\r\n      finished: false,\r\n      failed: {\r\n        service: service, \r\n        results: results\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// the uploading process has finished\r\nexport function setSuccessResults() {\r\n  return {\r\n    type: 'SET_PROCESS_RESULTS',\r\n    items: {\r\n      finished: true,      \r\n    }\r\n  };\r\n}\r\n \r\nexport function itemsFetchDataSuccess(requestOption) {\r\n  return {\r\n      type: requestOption,\r\n      items: {        \r\n          finished: true           \r\n      }\r\n  }      \r\n}\r\n\r\n\r\nexport function fetchRepositoryUpload(packagesArray, sid) {\r\n  let serviceName = \"repository upload\"\r\n  let url = 'http://20.73.127.215:3000/api/package/'.concat(sid)\r\n  let body = {\r\n    packages: packagesArray\r\n  }\r\n  let payload = JSON.stringify(body)\r\n  let requestOption = 'REPOSITORY_UPLOAD_FETCH'\r\n  let contentType = \"application/json\"\r\n  return (dispatch) => {\r\n      dispatch(fetchDataPost(serviceName, url, requestOption, payload, contentType))\r\n  }\r\n}\r\n\r\nexport function fetchDependencyCheck(sessionId) {\r\n  let serviceName = \"dependency check\"\r\n  let url = 'http://20.76.10.244:3000/session'\r\n  let body = {\r\n    sid: sessionId,\r\n    type: \"npm\",  \r\n    statusCode: 0,  \r\n    pkgs: [{}]\r\n  }\r\n  let payload = JSON.stringify(body)\r\n  let requestOption = 'DEPENDENCY_FETCH'\r\n  let contentType = \"application/json\"\r\n  return (dispatch) => {\r\n      dispatch(fetchDataPost(serviceName, url, requestOption, payload, contentType))\r\n  }\r\n}\r\n\r\nexport function fetchUploadToStorage(packageToUpload, sid) {\r\n  let serviceName = \"upload packages to storage\"\r\n  const payload = new FormData()\r\n  payload.append('file', packageToUpload)\r\n\r\n  let url = 'http://20.73.218.20:3000/packages/'.concat(sid)  \r\n  let requestOption = 'UPLOAD_TO_STORAGE_FETCH'\r\n  let contentType = undefined\r\n  return (dispatch) => {\r\n      dispatch(fetchDataPost(serviceName, url, requestOption, payload, contentType))\r\n  }\r\n}\r\n\r\nexport function fetchDuplicationCheck(hashedPackages, sid) {\r\n  let serviceName = \"duplication check\"\r\n  let url = 'http://51.124.62.119:3000/api/checkpackages'\r\n  let body = {\r\n    \"type\": \"npm\",\r\n    \"packages\": hashedPackages\r\n  }\r\n  let payload = JSON.stringify(body)\r\n  let requestOption = 'DUPLICATION_FETCH'\r\n  let contentType = \"application/json\"\r\n  return (dispatch) => {\r\n      dispatch(fetchDataPost(serviceName, url, requestOption, payload, contentType))\r\n  }\r\n}\r\n\r\nfunction fetchDataPost(serviceName, url, requestOption, payload, contentType) {\r\n  return (dispatch) => {\r\n      dispatch(increaseItemsThatLoading());\r\n      console.info(payload)\r\n      const headers = {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Access-Control-Request-Method': '*',\r\n        'Access-Control-Allow-Headers': '*',\r\n        'Access-Control-Allow-Methods': 'OPTIONS, GET, POST, PATCH, DELETE, PUT',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"X-Requested-With\"\r\n      }\r\n      if (contentType != undefined) {\r\n        headers['Content-Type'] = contentType\r\n      }\r\n      const requestOpts = {\r\n        headers: headers,\r\n        method: 'POST',\r\n        body: payload\r\n      }        \r\n      fetch(url, requestOpts)    \r\n         .then((response) => {\r\n              if (!response.ok) {\r\n                  throw response\r\n              }              \r\n              dispatch(decreaseItemsThatLoading());\r\n              return response;\r\n          })         \r\n          .then((items) => {            \r\n            dispatch(itemsFetchDataSuccess(requestOption))\r\n          })\r\n          .catch((err) => {\r\n            dispatch(itemsHasErrored(true))\r\n            err.json().then((erroeMsg) => {\r\n              dispatch(setErrorResults(serviceName, erroeMsg))\r\n            }) \r\n          });\r\n  };\r\n}","C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\hashedPackagesActions.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\uploadedPackagesReducer.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\uploadedPackagesAction.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\components\\Stepper\\stepper.js",["156","157","158","159","160"],"import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchDependencyCheck, fetchDuplicationCheck, fetchRepositoryUpload, fetchUploadToStorage } from '../../store/actions/servicesFetchingActions';\r\n\r\nconst Stepper = (props) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    var sid = Math.random().toString(36).substring(7)\r\n    // step 1\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        props.fetchDuplicationCheck(props.hashedPackages, sid)\r\n    }, []);\r\n    // step 2\r\n    React.useEffect(() => {\r\n        if (props.duplicationCheck['finished'] == true) {\r\n            props.fetchUploadToStorage(props.uploadedPackages[0], sid)\r\n        }\r\n    }, [props.duplicationCheck]);\r\n    // step 3\r\n    React.useEffect(() => {\r\n        if (props.uploadToStorageManager['finished']) {\r\n            props.fetchDependencyCheck(sid)\r\n        }\r\n    }, [props.uploadToStorageManager]);\r\n    // step 4\r\n    React.useEffect(() => {\r\n        if (props.dependencyCheck['finished']) {\r\n            props.fetchRepositoryUpload(props.uploadedPackages.map(a => a.name),sid)\r\n        }\r\n    }, [props.dependencyCheck]);\r\n\r\n    // step 5\r\n    React.useEffect(() => {\r\n        if (props.repositoryUpload['finished']) {\r\n            setLoading(false)\r\n        }\r\n    }, [props.repositoryUpload]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: loading ? '800ms' : '0ms',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hashedPackages: state.hashedPackages,\r\n        uploadedPackages: state.uploadedPackages,\r\n        dependencyCheck: state.dependencyCheck,\r\n        duplicationCheck: state.duplicationCheck,\r\n        uploadToStorageManager: state.uploadToStorageManager,\r\n        repositoryUpload: state.repositoryUpload\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {        \r\n        fetchDuplicationCheck: (uploadedPackages, sid) => dispatch(fetchDuplicationCheck(uploadedPackages, sid)),\r\n        fetchDependencyCheck: (sid) => dispatch(fetchDependencyCheck(sid)),\r\n        fetchRepositoryUpload: (uploadedPackages, sid) => dispatch(fetchRepositoryUpload(uploadedPackages, sid)),\r\n        fetchUploadToStorage: (uploadedPackages, sid) => dispatch(fetchUploadToStorage(uploadedPackages, sid)),\r\n    };\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper)","C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\repositorySelectionReducer.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\reducers\\technologySelectedReducer.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\techlonogySelectionActions.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\store\\actions\\repositorySelectionActions.js",[],"C:\\Users\\AG23\\pumba-ui\\src\\components\\Results\\results.js",["161"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Stepper from '../Stepper/stepper';\r\nimport ResultsError from './resultsError';\r\n\r\nconst Results = (props) => {\r\n    if (props.processResults['finished']) {\r\n        return (\r\n            \"finished\"\r\n        )\r\n    }  \r\n    else if (Object.keys(props.processResults['failed']).length != 0 ) {\r\n        return (\r\n            <ResultsError/>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Stepper/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        processResults: state.processResults\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Results)","C:\\Users\\AG23\\pumba-ui\\src\\components\\Results\\resultsError.js",[],{"ruleId":"162","severity":1,"message":"163","line":6,"column":28,"nodeType":"164","messageId":"165","endLine":6,"endColumn":42},{"ruleId":"162","severity":1,"message":"166","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":16},{"ruleId":"162","severity":1,"message":"167","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":18},{"ruleId":"162","severity":1,"message":"168","line":12,"column":10,"nodeType":"164","messageId":"165","endLine":12,"endColumn":16},{"ruleId":"162","severity":1,"message":"169","line":14,"column":10,"nodeType":"164","messageId":"165","endLine":14,"endColumn":25},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"175","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":20},{"ruleId":"162","severity":1,"message":"176","line":2,"column":29,"nodeType":"164","messageId":"165","endLine":2,"endColumn":35},{"ruleId":"162","severity":1,"message":"177","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":13},{"ruleId":"162","severity":1,"message":"178","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":12},{"ruleId":"162","severity":1,"message":"179","line":3,"column":22,"nodeType":"164","messageId":"165","endLine":3,"endColumn":30},{"ruleId":"162","severity":1,"message":"180","line":6,"column":9,"nodeType":"164","messageId":"165","endLine":6,"endColumn":20},{"ruleId":"162","severity":1,"message":"181","line":15,"column":9,"nodeType":"164","messageId":"165","endLine":15,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":1,"column":1,"nodeType":"184","endLine":57,"endColumn":3},{"ruleId":"162","severity":1,"message":"185","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"186","line":3,"column":3,"nodeType":"164","messageId":"165","endLine":3,"endColumn":11},{"ruleId":"162","severity":1,"message":"181","line":21,"column":9,"nodeType":"164","messageId":"165","endLine":21,"endColumn":16},{"ruleId":"162","severity":1,"message":"187","line":24,"column":10,"nodeType":"164","messageId":"165","endLine":24,"endColumn":15},{"ruleId":"162","severity":1,"message":"188","line":24,"column":17,"nodeType":"164","messageId":"165","endLine":24,"endColumn":25},{"ruleId":"162","severity":1,"message":"189","line":27,"column":9,"nodeType":"164","messageId":"165","endLine":27,"endColumn":19},{"ruleId":"162","severity":1,"message":"190","line":35,"column":7,"nodeType":"164","messageId":"165","endLine":35,"endColumn":15},{"ruleId":"162","severity":1,"message":"191","line":37,"column":10,"nodeType":"164","messageId":"165","endLine":37,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":58,"column":73,"nodeType":"194","messageId":"195","endLine":58,"endColumn":75},{"ruleId":"196","severity":1,"message":"197","line":60,"column":17,"nodeType":"198","endLine":60,"endColumn":86},{"ruleId":"192","severity":1,"message":"193","line":65,"column":73,"nodeType":"194","messageId":"195","endLine":65,"endColumn":75},{"ruleId":"196","severity":1,"message":"197","line":66,"column":17,"nodeType":"198","endLine":66,"endColumn":86},{"ruleId":"199","severity":1,"message":"200","line":126,"column":9,"nodeType":"201","messageId":"195","endLine":126,"endColumn":39},{"ruleId":"192","severity":1,"message":"202","line":128,"column":23,"nodeType":"194","messageId":"195","endLine":128,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":15,"column":8,"nodeType":"205","endLine":15,"endColumn":10,"suggestions":"206"},{"ruleId":"192","severity":1,"message":"193","line":18,"column":48,"nodeType":"194","messageId":"195","endLine":18,"endColumn":50},{"ruleId":"203","severity":1,"message":"204","line":21,"column":8,"nodeType":"205","endLine":21,"endColumn":32,"suggestions":"207"},{"ruleId":"203","severity":1,"message":"204","line":27,"column":8,"nodeType":"205","endLine":27,"endColumn":38,"suggestions":"208"},{"ruleId":"203","severity":1,"message":"204","line":33,"column":8,"nodeType":"205","endLine":33,"endColumn":31,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"202","line":12,"column":65,"nodeType":"194","messageId":"195","endLine":12,"endColumn":67},"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'blueGrey' is defined but never used.","'lightGreen' is defined but never used.","'render' is defined but never used.","'ConnectedRouter' is defined but never used.","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"'Component' is defined but never used.","'HashRouter' is defined but never used.","'Switch' is defined but never used.","'red' is defined but never used.","'Grid' is defined but never used.","'useTheme' is defined but never used.","'drawerWidth' is assigned a value but never used.","'classes' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'packages' is assigned a value but never used.","'handleSave' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'Access-Control-Allow-Headers'.","ObjectExpression","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props' and 'sid'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["212"],["213"],["214"],["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [props, sid]",{"range":"224","text":"225"},"Update the dependencies array to be: [props, props.duplicationCheck, sid]",{"range":"226","text":"227"},"Update the dependencies array to be: [props, props.uploadToStorageManager, sid]",{"range":"228","text":"229"},"Update the dependencies array to be: [props, props.dependencyCheck, sid]",{"range":"230","text":"231"},[621,623],"[props, sid]",[820,844],"[props, props.duplicationCheck, sid]",[1012,1042],"[props, props.uploadToStorageManager, sid]",[1244,1267],"[props, props.dependencyCheck, sid]"]